<!DOCTYPE html>
html(lang="en")

head
    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width,initial-scale=1")
    title Mongo & Express Book Library
    link(rel="stylesheet" href="/styling/style.css")


body
    div(class="title")
        h1 MongoDB, Mongoose, Express & Pug Message Board
    
    div(class="project-details")
        h2 DETAILS
        li A message board which allows users to post, reply and report a thread. 
        li Uses Bcrypt to hash passwords to delete thread and replies.
    
    h2 TRY IT OUT
    div(class="try-it-out")        
        div(class="try-sec submit-form")
            form(id="createThreadForm" method="POST" action="/api/threads/")
                h3 Create Thread
                div(class="input-area")
                    div(class="form-area form-area-one")
                        p
                            label(class="form-label" for="threadTitle") Thread Title:   
                            input(name="threadTitle" placeholder="title" required)
                        p
                            label(class="form-label" for="threadAuthor") Author: 
                            input(name="threadAuthor" placeholder="thread author" required)  
                        p
                            label(class="form-label" for="threadPassword") Password: 
                            input(name="threadPassword" placeholder="password to delete thread" required)                         

                    div(class="form-area form-area-two")
                        p
                            label(class="form-label" for="threadDetails") Thread Details:
                        p
                            textarea(name="threadDetails" rows="5" cols="50" required)
                    
               
                div(class="submit-area")
                    input(class="submit-button" type="submit" value="Create")
                

        div(class="try-sec get-form")
            form(id="getThreadForm" method="GET" onsubmit="urlCreatorGet()")
                h3 Go to Thread
                div(class="input-area")
                    div(class="form-area form-area-one")
                        label(class="form-label" for="threadId") Thread ID: 
                        input(name="threadId" id="getId" placeholder="thread id" required)

                div(class="submit-area")
                    input(class="submit-button" type="submit" value="Go to Thread")

        div(class="try-sec report-form")
            form(id="reportThreadForm" method="POST" onSubmit="urlCreatorPut()")
                h3 Report Thread
                div(class="input-area")
                    div(class="form-area form-area-one")
                        p
                            label(class="form-label" for="threadId") Thread ID: 
                            input(name="threadId" id="updateId" placeholder="thread id" required) 
                    //-     p
                    //-         label(class="form-label" for="threadAuthor") Author: 
                    //-         input(name="reportBy" placeholder="report author" required)                                             

                    //- div(class="form-area form-area-two")
                    //-     p
                    //-         label(class="form-label" for="reportText") Report Details: 
                    //-     p                        
                    //-         textarea(name="reportText" rows="5" cols="50" required)
                
                div(class="submit-area")
                    input(class="submit-button" type="submit" value="Report")
                

        div(class="try-sec delete-form")
            form(id="deleteThreadForm" method="POST" onsubmit="urlCreatorDel()")
                h3 Delete Thread
                div(class="input-area")
                    div(class="form-area form-area-one")
                        p
                            label(class="form-label" for="threadId") Thread ID: 
                            input(name="threadId" id="deleteId" placeholder="thread id" required)

                        p
                            label(class="form-label" for="threadPassword") Password: 
                            input(name="threadPassword" placeholder="password to delete thread" required)  

                div(class="submit-area")
                    input(class="submit-button" type="submit" value="Delete")          
        
        
                
    
    div(class="thread-database")
        h2 THREAD LIST (LATEST SHOWN FIRST)       
        
        each thread, index in threadDocs
            div(class= 'thread-box')
                div
                    p <strong>TITLE</strong>: #{threadDocs[index].thread_title}
                
                div
                    p <strong>ID</strong>: #{threadDocs[index]._id}               
                
                div
                    p <strong>AUTHOR</strong>:  #{threadDocs[index].thread_author} 

                div
                    p <strong>DETAILS</strong>: #{threadDocs[index].thread_details}
                    -  var postDate = threadDocs[index].thread_date

                    p <strong>POST DATE</strong>: #{postDate.getFullYear()+ "-" +(postDate.getMonth()+1) + "-" + postDate.getDate()} 
                
                div
                    p <strong>REPORTS</strong>: #{threadDocs[index].thread_reports}
               
                div
                    p <strong>REPLIES</strong>: #{threadDocs[index].thread_replies.length}

                div
                    if threadDocs[index].thread_replies.length ===0
                        p 

                    else
                        table(class="reply-table") 
                            tr(class="reply-row reply-header")              
                                th REPLY BY:
                                th DATE 
                                th REPLY

             
                            each reply, counter in threadDocs[index].thread_replies.reverse().slice(0,3)
                                -  var replyDate = threadDocs[index].thread_replies[counter].reply_date
                                        
                                tr(class="reply-row reply-details")     
                                    th(class="reply-author") #{threadDocs[index].thread_replies[counter].reply_by}
                                    th(class="reply-date") #{replyDate.getFullYear()+ "-" +(replyDate.getMonth()+1) + "-" + replyDate.getDate()}
                                    th(class="reply-text") #{threadDocs[index].thread_replies[counter].reply_text}
                
                
               
                div                
                    form(class="thread-list-button" method="GET" action= '/api/threads/'+ threadDocs[index]._id)
                        input(name="threadId" type="hidden" value=threadDocs[index]._id )
                        input(class="submit-button" type="submit" value="Post / View Replies")                

                div                
                    form(class="thread-list-button" method="POST" action= '/api/threads/'+ threadDocs[index]._id+'?_method=PUT')
                        input(name="threadId" type="hidden" value=threadDocs[index]._id )
                        input(class="submit-button" type="submit" value="Report")
                div
                    form(class="thread-list-button" method="POST" action= '/api/threads/'+ threadDocs[index]._id +'?_method=DELETE')
                        input(name="threadId" type="hidden" value=threadDocs[index]._id )
                        
                        p
                            input(name="threadPassword" placeholder="password to delete thread" required) 
                        p
                            input(class="submit-button" type="submit" value="Delete Thread")
                    
                        
 
script(src="/js/form.js")

